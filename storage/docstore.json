{"docstore/metadata": {"c8c40c63-4565-4c60-8f6f-76304ed1582c": {"doc_hash": "29e6e3abc75feded71656024268890ff459a998ea05f9ada9c870254fd41b8df"}, "e6843949-9f9a-4125-81af-1dcf75fb3310": {"doc_hash": "eac3ed4d94c008ca2924cf77c9c90d497bbf728497f390ab7fe5cda731fabc6c"}, "fa9c5033-7dcd-483f-9310-5f871379f253": {"doc_hash": "4bdd3866e54454f170866468a8bb20810206cb77340c2d0970f4c5449fd71744"}, "03cab958-eaf7-43ce-83ae-6d43ead4e67a": {"doc_hash": "c50c09066ba59fc7aea941f4f6cd74e38c7b8e3ff524620c238898ef03ef5527"}, "daf8a621-5e12-4512-8707-002c0de88661": {"doc_hash": "b37f06abf432d0f750c55f358fc39e3bd71a6930e4dd78e2e96a4c7305e68155"}, "c1cd96bc-680b-4035-8e1d-9cb2df638efb": {"doc_hash": "df79d7ec2d26aacbe941fdd29ecc3f22b25ac9fd7ad782eea54ca702dedb48a8"}, "b9fb87f7-c026-4050-91c7-e05b64f59000": {"doc_hash": "a7dccf665034c3dc65e3ab15b20d8e8d35f0e145e7100c87471b5f8f9277e7f2", "ref_doc_id": "c8c40c63-4565-4c60-8f6f-76304ed1582c"}, "953f1f42-2c62-437a-90c8-a44c810addec": {"doc_hash": "584cf608883621198dd5df3bb574089f0047ff402240c743b91db2e0cc5ccf71", "ref_doc_id": "e6843949-9f9a-4125-81af-1dcf75fb3310"}, "e8ec0a0f-bde6-4581-92b1-c407de08d66c": {"doc_hash": "f686c9055328c612ee37bb52f1cf3acdcdcb5202582d8a5390a68125e48c6361", "ref_doc_id": "fa9c5033-7dcd-483f-9310-5f871379f253"}, "31f52d97-c35d-4861-b913-e29223ba1b53": {"doc_hash": "a23db6bd84bc662ba3ccc7125693604a058edef25ec039071b9f4d463c549a4a", "ref_doc_id": "03cab958-eaf7-43ce-83ae-6d43ead4e67a"}, "8b6a5bf4-5cd1-4e93-a09d-eaa3f3993c64": {"doc_hash": "2a32efa065e8d689f8fd3d5e9b12fb6dbe76277a071a9e711f2437fd54547881", "ref_doc_id": "daf8a621-5e12-4512-8707-002c0de88661"}, "54ee75d0-635f-4f68-a0c8-bda996ffd550": {"doc_hash": "2ecce714d51b2694bdd7033235cdee3b457d68add750673992731af9fc4a8da9", "ref_doc_id": "c1cd96bc-680b-4035-8e1d-9cb2df638efb"}}, "docstore/ref_doc_info": {"c8c40c63-4565-4c60-8f6f-76304ed1582c": {"node_ids": ["b9fb87f7-c026-4050-91c7-e05b64f59000"], "metadata": {"page_label": "1", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}}, "e6843949-9f9a-4125-81af-1dcf75fb3310": {"node_ids": ["953f1f42-2c62-437a-90c8-a44c810addec"], "metadata": {"page_label": "2", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}}, "fa9c5033-7dcd-483f-9310-5f871379f253": {"node_ids": ["e8ec0a0f-bde6-4581-92b1-c407de08d66c"], "metadata": {"page_label": "3", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}}, "03cab958-eaf7-43ce-83ae-6d43ead4e67a": {"node_ids": ["31f52d97-c35d-4861-b913-e29223ba1b53"], "metadata": {"page_label": "4", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}}, "daf8a621-5e12-4512-8707-002c0de88661": {"node_ids": ["8b6a5bf4-5cd1-4e93-a09d-eaa3f3993c64"], "metadata": {"page_label": "5", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}}, "c1cd96bc-680b-4035-8e1d-9cb2df638efb": {"node_ids": ["54ee75d0-635f-4f68-a0c8-bda996ffd550"], "metadata": {"page_label": "1", "file_name": "Tickets - Odoo Community Days India 2025 (08_13_2025 08_30_00) - DHRUV PRAJAPATI.pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Tickets - Odoo Community Days India 2025 (08_13_2025 08_30_00) - DHRUV PRAJAPATI.pdf", "file_type": "application/pdf", "file_size": 76532, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}}}, "docstore/data": {"b9fb87f7-c026-4050-91c7-e05b64f59000": {"__data__": {"id_": "b9fb87f7-c026-4050-91c7-e05b64f59000", "embedding": null, "metadata": {"page_label": "1", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c8c40c63-4565-4c60-8f6f-76304ed1582c", "node_type": "4", "metadata": {"page_label": "1", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}, "hash": "29e6e3abc75feded71656024268890ff459a998ea05f9ada9c870254fd41b8df", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Practical-2 \n \nB2CEAI: DS/T25012532001 _Prajapati_Dhruv Page 1 \n \n \nAim: Write a Program: \n \n1. To implement an Array representation of the sparse matrices. \n2. To search the element in 2-D array.  \n3. To create, initialize and print the values of the 3-D array. \n \nCode: \n1. To implement an Array representation of the sparse matrices : \n \n#include<stdio.h> \n#include<conio.h> \nvoid main() \n{ \nint arr[4][4] = {{0,0,1,0},{0,0,0,2},{1,0,0,0},{0,3,0,0}}; \nint i,j,k=1; \nint sparse[20][3]; \nclrscr(); \nprintf(\"original matrix :\\n\"); \nfor(i=0;i<4;i++){ \n  for(j=0;j<4;j++) \n  { \n   printf(\"%d\",arr[i][j]); \n \n  } \n  printf(\"\\n\"); \n} \nfor(i=0;i<4;i++){ \nfor(j=0;j<4;j++){ \nif(arr[i][j]!=0){ \nsparse[k][0]=i; \nsparse[k][1]=j; \nsparse[k][2]= arr[i][j]; \nk++; \n} \n} \n} \nprintf(\"sparse matrix :\\n\"); \nprintf(\"Row\\tCol\\tVal\\n\"); \nfor(i=0;i<k;i++){ \n printf(\"%d\\t%d\\t%d\\n\",sparse[i][0],sparse[i][1],sparse[i][2]); \n} \ngetch(); \n} \n \nOutput:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 930, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "953f1f42-2c62-437a-90c8-a44c810addec": {"__data__": {"id_": "953f1f42-2c62-437a-90c8-a44c810addec", "embedding": null, "metadata": {"page_label": "2", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "e6843949-9f9a-4125-81af-1dcf75fb3310", "node_type": "4", "metadata": {"page_label": "2", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}, "hash": "eac3ed4d94c008ca2924cf77c9c90d497bbf728497f390ab7fe5cda731fabc6c", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Practical-2 \n \nB2CEAI: DS/T25012532001 _Prajapati_Dhruv Page 2 \n \n \n \n \n \n \n \n2. To search the element in 2-D array : \n \n \n#include <stdio.h> \n#include <conio.h> \nvoid main() { \n    int arr[4][4] = {{1, 4, 7, 11},{2, 5, 8, 12},{3, 6, 9, 16},{10, 13, 14, 17}}; \n    int target, i = 0, j = 3, found = 0,x,y; \n    clrscr(); \n    printf(\"Array elements:\\n\"); \n    for(x=0;x<3;x++) { \n    for(y=0;y<4;y++){ \n    printf(\"%d\",arr[x][y]); \n    } \n    printf(\"\\n\"); \n    } \n    printf(\"Enter the element to search: \"); \n    scanf(\"%d\", &target); \n    while (i < 4 && j >= 0) { \n    if (arr[i][j] == target) { \n        printf(\"Element %d found at position [%d][%d]\\n\", target, i, j); \n        found = 1; \n        break; \n    } else if (arr[i][j] > target) { \n        j--; \n    } else { \n        i++; \n    } \n    } \n    if (!found) \n    printf(\"Element %d not found in the array.\\n\", target); \n    getch(); \n}", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 898, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "e8ec0a0f-bde6-4581-92b1-c407de08d66c": {"__data__": {"id_": "e8ec0a0f-bde6-4581-92b1-c407de08d66c", "embedding": null, "metadata": {"page_label": "3", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "fa9c5033-7dcd-483f-9310-5f871379f253", "node_type": "4", "metadata": {"page_label": "3", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}, "hash": "4bdd3866e54454f170866468a8bb20810206cb77340c2d0970f4c5449fd71744", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Practical-2 \n \nB2CEAI: DS/T25012532001 _Prajapati_Dhruv Page 3 \n \n \nOutput: \n \n \n \n \n \n \n3. To create, initialize and print the values of the 3-D array. \n \n \n#include <stdio.h> \n#include <conio.h> \nvoid main() { \nint arr[2][3][4]; \nint i, j, k, value = 1; \nclrscr(); \nfor (i = 0; i < 2; i++) { \nfor (j = 0; j < 3; j++) { \nfor (k = 0; k < 4; k++) { \narr[i][j][k] = value; \nvalue++; \n} \n} \n} \nprintf(\"3-D Array Elements:\\n\"); \nfor (i = 0; i < 2; i++) { \nprintf(\"Table %d:\\n\", i); \nfor (j = 0; j < 3; j++) { \nfor (k = 0; k < 4; k++) { \nprintf(\"%3d \", arr[i][j][k]); \n} \nprintf(\"\\n\"); \n} \nprintf(\"\\n\"); \n} \ngetch(); \n} \n \n \nOutput:", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 627, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "31f52d97-c35d-4861-b913-e29223ba1b53": {"__data__": {"id_": "31f52d97-c35d-4861-b913-e29223ba1b53", "embedding": null, "metadata": {"page_label": "4", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "03cab958-eaf7-43ce-83ae-6d43ead4e67a", "node_type": "4", "metadata": {"page_label": "4", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}, "hash": "c50c09066ba59fc7aea941f4f6cd74e38c7b8e3ff524620c238898ef03ef5527", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Practical-2 \n \nB2CEAI: DS/T25012532001 _Prajapati_Dhruv Page 4 \n \n \n \n \nB) Discuss following concepts with an example \n i) Address Calculation of 1-D Array. \n ii) Address Calculation of 2-D Array using Row Major and Column Major Order. \n \nAnswer : \n \n1. 1-Dimensional Array (1D Array) \n\uf0b7 A linear array accessed using a single index. \n\uf0b7 Formula for address calculation: \n \nAddress of A[Index]=B+W\u00d7(Index\u2212LB) \nWhere: \no B = Base address \no W = Size of one element in bytes \no LB = Lower bound of index (default = 0) \no Index = Index of element \n \n \n2. 2-Dimensional Array (2D Array) \nA 2D array is like a matrix with M rows and N columns. \nTwo ways to store elements in memory: \n(a) Row Major Order \n\uf0b7 Elements stored row by row. \n\uf0b7 Formula: \nAddress of A[I][J]=B+W\u00d7((I\u2212LR)\u00d7N+(J\u2212LC)) \nWhere: \no I = Row index, J = Column index \no LR = Lower row index, LC = Lower column index \no N = Total columns \n(b) Column Major Order \n\uf0b7 Elements stored column by column. \n\uf0b7 Formula: \nAddress of A[I][J]=B+W\u00d7((J\u2212LC)\u00d7M+(I\u2212LR)) \nWhere: \no M = Total rows \n \n \nRow Major Order : \n\uf0b7 Elements are stored row by row in contiguous memory locations. \n\uf0b7 Traverses an entire row first, then moves to the next row.", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1187, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "8b6a5bf4-5cd1-4e93-a09d-eaa3f3993c64": {"__data__": {"id_": "8b6a5bf4-5cd1-4e93-a09d-eaa3f3993c64", "embedding": null, "metadata": {"page_label": "5", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "daf8a621-5e12-4512-8707-002c0de88661", "node_type": "4", "metadata": {"page_label": "5", "file_name": "Practical 2..pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Practical 2..pdf", "file_type": "application/pdf", "file_size": 350342, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}, "hash": "b37f06abf432d0f750c55f358fc39e3bd71a6930e4dd78e2e96a4c7305e68155", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Practical-2 \n \nB2CEAI: DS/T25012532001 _Prajapati_Dhruv Page 5 \n \n\uf0b7 Efficient for row-wise access, less efficient for column-wise. \n\uf0b7 Used in: Languages like C, C++. \n\uf0b7 Applications: Suitable for row-wise operations, e.g., image processing. \n \n \nColumn Major Order : \n\uf0b7 Elements are stored column by column in contiguous memory locations. \n\uf0b7 Traverses an entire column first, then moves to the next column. \n\uf0b7 Efficient for column-wise access, less efficient for row-wise. \n\uf0b7 Used in: Languages like Fortran. \n\uf0b7 Applications: Suitable for column-wise operations, e.g., matrix multiplication. \n \nProblem:  \nGiven a 2D array B[5\u20269][10\u202614] (rows 5\u20139, cols 10\u201314), \n\uf0b7 Base address (B) = 500 \n\uf0b7 Each element size (W) = 4 bytes \n\uf0b7 Find the address of B[7][12] in both Row Major and Column Major order. \n \nSolution: \n \n  Rows = 9 \u2013 5 + 1 = 5 rows \n  Columns = 14 \u2013 10 + 1 = 5 columns \n  LR = 5, LC = 10 \n \n \nRow Major Order : \nAddress = B + W * ((I - LR) * N + (J - LC)) \nAddress = 500 + 4 * ((7 - 5) * 5 + (12 - 10)) \nAddress = 500 + 4 * (2 * 5 + 2) \nAddress = 500 + 4 * 12 \nAddress = 500 + 48 = 548 \n \n \nColumn Major Order : \nAddress = B + W * ((J - LC) * M + (I - LR)) \nAddress = 500 + 4 * ((12 - 10) * 5 + (7 - 5)) \nAddress = 500 + 4 * (2 * 5 + 2) \nAddress = 500 + 4 * 12 \nAddress = 500 + 48 = 548", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 1294, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}, "54ee75d0-635f-4f68-a0c8-bda996ffd550": {"__data__": {"id_": "54ee75d0-635f-4f68-a0c8-bda996ffd550", "embedding": null, "metadata": {"page_label": "1", "file_name": "Tickets - Odoo Community Days India 2025 (08_13_2025 08_30_00) - DHRUV PRAJAPATI.pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Tickets - Odoo Community Days India 2025 (08_13_2025 08_30_00) - DHRUV PRAJAPATI.pdf", "file_type": "application/pdf", "file_size": 76532, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}, "excluded_embed_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "excluded_llm_metadata_keys": ["file_name", "file_type", "file_size", "creation_date", "last_modified_date", "last_accessed_date"], "relationships": {"1": {"node_id": "c1cd96bc-680b-4035-8e1d-9cb2df638efb", "node_type": "4", "metadata": {"page_label": "1", "file_name": "Tickets - Odoo Community Days India 2025 (08_13_2025 08_30_00) - DHRUV PRAJAPATI.pdf", "file_path": "C:\\Users\\ASUS\\Desktop\\PYTHON\\Semantic-App\\data\\Tickets - Odoo Community Days India 2025 (08_13_2025 08_30_00) - DHRUV PRAJAPATI.pdf", "file_type": "application/pdf", "file_size": 76532, "creation_date": "2025-08-24", "last_modified_date": "2025-08-24"}, "hash": "df79d7ec2d26aacbe941fdd29ecc3f22b25ac9fd7ad782eea54ca702dedb48a8", "class_name": "RelatedNodeInfo"}}, "metadata_template": "{key}: {value}", "metadata_separator": "\n", "text": "Odoo Community Days India 2025\nFree Pass for OCD 2025\nDHRUV PRAJAPATI\nGujarat\nI am a student, or looking for a\njob\n\uf041\nMahatma Mandir, Convention and\nExhibition Centre\n \nSector 13C, Sector 13,\nOpposite, Dandi Kutir(salt mount),\nGandhinagar 382014\nGujarat GJ\nIndia\n\uf073\n8/13/25, 8:30 AM\nto\n8/14/25, 6:00 PM\n \n \n \n \n \n \n \n \n \nOdoo IN Pvt Ltd\n \n\uf095\n \n+91 79 4050 0100\n \n\uf0e0\n \nindia@odoo.com", "mimetype": "text/plain", "start_char_idx": 0, "end_char_idx": 378, "metadata_seperator": "\n", "text_template": "{metadata_str}\n\n{content}", "class_name": "TextNode"}, "__type__": "1"}}}